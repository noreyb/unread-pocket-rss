<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0"><channel><title>Pocket Random</title><link>https://getpocket.com/</link><description>Pocket Random</description><language>ja</language><lastBuildDate>Sun, 17 Dec 2023 06:08:42 -0000</lastBuildDate><item><title>[B! プログラミング] シングルスレッドやマルチプロセスなどの並行処理の話について、 すぐに忘れてしまいます。 どうしたらもっと知識が定着すると思い</title><link>https://b.hatena.ne.jp/entry/s/mond.how/ja/topics/4upzdoomuocxlmy/166km2hawfy9l17</link><description>シングルスレッドやマルチプロセスなどの並行処理の話について、 すぐに忘れてしまいます。 どうしたら...</description></item><item><title>日時の文字列を python でパース。年月や時分を取りだす | コード７区</title><link>http://ailaby.com/parse_date/</link><description>CSV などから日時の文字列を読み込み、そこから年や月、時間を取りだしたいとします。正規表現を使えばいいのですが、ちょっと面倒なので別の方法でやってみます。</description></item><item><title>会社PCでrm -rf ~した話 / rm_rf_choron - Speaker Deck</title><link>https://speakerdeck.com/uhooi/rm-rf-choron</link><description>All slide content and descriptions are owned by their creators.</description></item><item><title>「すごい専門的なのに分かりやすい」現役のお医者さんがマイナー外科である形成外科について漫画で紹介します - Togetter</title><link>https://togetter.com/li/2254296</link><description>更新日:11月6日18時01分</description></item><item><title>pull_request_target で GitHub Actions の改竄を防ぐ</title><link>https://zenn.dev/shunsuke_suzuki/articles/secure-github-actions-by-pull-request-target</link><description>本記事では GitHub Actions で pull_request event の代わりに pull_request_target を用い、 workflow の改竄を防いでより安全に CI を実行する方法について紹介します。 まずは前置きとして背景や解決したいセキュリティ的な課題について説</description></item><item><title>GitHub - serverless-dns/serverless-dns: The RethinkDNS resolver that deploy</title><link>https://github.com/serverless-dns/serverless-dns</link><description>It's a bird, it's a plane, it's... a self-hosted, pi-hole esque, DNS resolver serverless-dns is a Pi-Hole esque content-blocking, serverless, stub DNS-over-HTTPS (DoH) and DNS-over-TLS (DoT) resolver. Runs out-of-the-box on Cloudflare Workers, Deno Deploy, Fastly Compute@Edge, and Fly.io.</description></item><item><title>マイクロサービスの認証・認可とJWT / Authentication and Authorization in Microservices and </title><link>https://speakerdeck.com/oracle4engineer/authentication-and-authorization-in-microservices-and-jwt</link><description>&lt;a href="https://ochacafe.connpass.com/event/215000/"&gt;OCHaCafe Season4 #4&lt;/a&gt;の資料です． デモのソースコード等は&lt;a href="https://github.com/oracle-japan/ochacafe-mp-jwt-demo"&gt;こちら&lt;/a&gt;をご参照ください．</description></item><item><title>Takahiro Ezaki - Publications</title><link>https://sites.google.com/site/ezakitakahiro/publications</link><description /></item><item><title>squash and mergeしか使ってないけど全く困ってない – Jun Mukai's blog</title><link>https://wp.jmuk.org/2023/11/30/squash-and-merge%E3%81%97%E3%81%8B%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%84%E3%81%91%E3%81%A9%E5%85%A8%E3%81%8F%E5%9B%B0%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%84/</link><description>こんな記事を見かけた。 こういうことはレポジトリ構成・ワークフローと密接に紐づいているので、そういう前提を抜きにはどれがいいとかはいうことはできない。が、自分はいわゆるsquash and mergeのみの環境しかほとんど</description></item><item><title>Macでメッセージや書類を音声入力する - Apple サポート (日本)</title><link>https://support.apple.com/ja-jp/guide/mac-help/mh40584/mac</link><description>音声入力では、テキスト入力ができる場所でテキストを音声入力できます。これは「キーボード」設定でオンにします。音声入力された内容は、リクエストを処理するためにAppleに送信されます。フィードバックウインドウ</description></item><item><title>blog.masa23.jp – blog.masa23.jp</title><link>https://blog.masa23.jp/</link><description>blog.masa23.jp blog.masa23.jp さくらのクラウド ウェブアクセラレータで502(Bad Gateway)や504(Gateway Timeout)をキャッシュさせる方法です。 キャ … 2023-10-10 Rundeckのセットアップメモを記録します。 対象環境 バージョン Ubuntu 22.04 Rundeck 4.</description></item><item><title>Dumels</title><link>https://www.dumels.com/</link><description>Generate the UML classes for your repo</description></item><item><title>VRChat公式パートナーシップ契約を結んだ国内企業の一覧 - ぶいぶいれぽーと</title><link>https://v-v-report.hatenablog.com/entry/vrchat-official-business-partner-list</link><description>「2023年になってから、ソーシャルVR『VRChat』の公式パートナー企業が急速に増えつつあります。」 みたいなテキストを、今年は連載原稿とかに何度も書いている。だいぶ増えてきた印象。そして、そろそろ「どこが公式パ</description></item><item><title>書き手の意図やコードの背景を残す方法のあれこれ −きれいなコードの次に意識すべきこと− - give IT a try</title><link>https://blog.jnito.com/entry/2023/07/15/200755#Q-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E7%BE%8E%E3%81%97%E3%81%95%E3%81%AA%E3%82%93%E3%81%A6%E4%B8%BB%E8%A6%B3%E3%81%AB%E9%81%8E%E3%81%8E%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E6%84%8F%E5%91%B3%E3%81%8C%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E3%81%AF</link><description>上の記事の中で、僕は「きれいなコードだけではすんなりコードが理解できないこともある」というような話を書きました。</description></item><item><title>創傷98-105</title><link>https://www.jstage.jst.go.jp/article/jsswc/12/2/12_98/_pdf/-char/ja</link><description /></item></channel></rss>